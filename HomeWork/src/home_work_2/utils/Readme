2.1. ArraysUtils:
		2.1.1. Написать метод public static int[] arrayFromConsole() рядом с main. Данный метод размер массива и каждый его элемент запрашивает у пользователя через консоль.
			2.1.1.1. Пример int[] container = arrayFromConsole(). Результат: В методе arrayFromConsole будет запрошена информация у пользователя, пользователь вводит размер (3) и его элементы по порядку {4, 17, 32}. Соответсвенно будет создан массив размером 3 с элементами {4, 17, 32} и сохранён в переменную container.
		2.1.2. Написать метод public static int[] arrayRandom(int size, int maxValueExclusion) рядом с main. Данный метод принимает два аргумента. Первый (size) указывает размер массива который мы хотим получить. Второй (maxValueExclusion) указывает до какого числа генерировать рандомные числа.
			2.1.2.1. Пример: int[] container = arrayRandom(5, 100). Результат: В методе arrayRandom будет создан массив размером 5 с числами от 0 до 99 (использовать класс Random) и сохранён в переменную container.

3. Нарисовать блок схему алгоритма работы пузырьковой сортировки. Результат должен быть в гите. Сохранить следующие форматы файлов: (.drawio || .vsdx) && (.pdf || .svg)
	bubbleSort.svg
	bubbleSort.vsdx
	shakerSort.svg
	shakerSort.vsdx

4.* Выполнить сортировку массива с числами:

    4.2. SortsUtils:
            4.2.1. Пузырьковая сортировка
            4.2.2. Шейкерная сортировка